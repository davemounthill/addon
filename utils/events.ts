"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Events = void 0;
var typed_apis_1 = require("@syncwith/typed-apis");
var evt = function (category, name) {
    return {
        name: name,
        category: category,
    };
};
exports.Events = {
    connectionDelete: evt(typed_apis_1.Category.connection, 'delete'),
    connectionDuplicate: evt(typed_apis_1.Category.connection, 'duplicate'),
    connectionCreate: evt(typed_apis_1.Category.connection, 'create'),
    connectionAttempt: evt(typed_apis_1.Category.connection, 'attempt'),
    connectionSave: evt(typed_apis_1.Category.connection, 'save'),
    connectionSaveSuccess: evt(typed_apis_1.Category.connection, 'save-success'),
    connectionValidate: evt(typed_apis_1.Category.connection, 'validate'),
    connectionNotFound: evt(typed_apis_1.Category.connection, 'not-found'),
    connectionPreviewShow: evt(typed_apis_1.Category.connectionPreview, 'show'),
    connectionPreviewClose: evt(typed_apis_1.Category.connectionPreview, 'close'),
    connectionPreviewRefresh: evt(typed_apis_1.Category.connectionPreview, 'refresh'),
    connectionPreviewNav: evt(typed_apis_1.Category.connectionPreview, 'nav'),
    jsonToTableUndo: evt(typed_apis_1.Category.jsonToTable, 'undo'),
    jsonToTableRedo: evt(typed_apis_1.Category.jsonToTable, 'redo'),
    // This event is tracked when a user previews a response in json2table, and has not yet applied any transforms,
    // and one or more columns, has transforms available (eg there is nested data)
    jsonToTableColWithTransforms: evt(typed_apis_1.Category.jsonToTable, 'col-with-transforms'),
    storeReload: evt(typed_apis_1.Category.store, 'reload'),
    endpointPaste: evt(typed_apis_1.Category.endpoint, 'paste'),
    cellrefSuggestionSelect: evt(typed_apis_1.Category.cellref, 'suggestion-select'),
    cellrefPickerShow: evt(typed_apis_1.Category.cellref, 'picker-show'),
    cellrefPickerSubmit: evt(typed_apis_1.Category.cellref, 'picker-submit'),
    apiSuggestionPaste: evt(typed_apis_1.Category.apiSuggestion, 'paste'),
    apiSuggestionFocus: evt(typed_apis_1.Category.apiSuggestion, 'focus'),
    apiSuggestionSearch: evt(typed_apis_1.Category.apiSuggestion, 'search'),
    apiSuggestionSelect: evt(typed_apis_1.Category.apiSuggestion, 'select'),
    endpointSuggestionSearch: evt(typed_apis_1.Category.endpointSuggestion, 'search'),
    endpointSuggestionResults: evt(typed_apis_1.Category.endpointSuggestion, 'results'),
    endpointSuggestionSelect: evt(typed_apis_1.Category.endpointSuggestion, 'select'),
    sheetsTemplateClick: evt(typed_apis_1.Category.sheetsTemplate, 'click'),
    sheetsTemplateAttempt: evt(typed_apis_1.Category.sheetsTemplate, 'attempt'),
    sheetsTemplateValidate: evt(typed_apis_1.Category.sheetsTemplate, 'validate'),
    sheetsTemplateSuccess: evt(typed_apis_1.Category.sheetsTemplate, 'success'),
    sheetsTemplateError: evt(typed_apis_1.Category.sheetsTemplate, 'error'),
    spreadsheetInstall: evt(typed_apis_1.Category.spreadsheet, 'install'),
    requestReviewShow: evt(typed_apis_1.Category.requestReview, 'show'),
    requestReviewLovingIt: evt(typed_apis_1.Category.requestReview, 'loving-it'),
    requestReviewNeedsWork: evt(typed_apis_1.Category.requestReview, 'needs-work'),
    requestReviewLeaveReview: evt(typed_apis_1.Category.requestReview, 'leave-review'),
    requestReviewFeedback: evt(typed_apis_1.Category.requestReview, 'feedback'),
    requestReviewCancel: evt(typed_apis_1.Category.requestReview, 'cancel'),
    paywall12xHourlyRefresh: evt(typed_apis_1.Category.paywall, '12x-hourly-refresh'),
    paywallUpgradeShow: evt(typed_apis_1.Category.paywall, 'upgrade-show'),
    paywallUpgradeAttempt: evt(typed_apis_1.Category.paywall, 'upgrade-attempt'),
    paywallUpgrade: evt(typed_apis_1.Category.paywall, 'upgrade'),
    paywallPlans: evt(typed_apis_1.Category.paywall, 'plans'),
    externalLinkClick: evt(typed_apis_1.Category.externalLink, 'click'),
    onboardingSurveyStart: evt(typed_apis_1.Category.onboardingSurvey, 'start'),
    onboardingSurveyCategory: evt(typed_apis_1.Category.onboardingSurvey, 'category'),
    onboardingSurveyFinish: evt(typed_apis_1.Category.onboardingSurvey, 'finish'),
    onboardingCallStart: evt(typed_apis_1.Category.onboardingCall, 'start'),
    onboardingCallDateSelected: evt(typed_apis_1.Category.onboardingCall, 'date-selected'),
    onboardingCallScheduled: evt(typed_apis_1.Category.onboardingCall, 'scheduled'),
    surveyStart: evt(typed_apis_1.Category.onboardingSurvey, 'start'),
    surveyFinish: evt(typed_apis_1.Category.onboardingSurvey, 'finish'),
    freeTrialStart: evt(typed_apis_1.Category.freeTrial, 'start'),
    addTeamMembersShow: evt(typed_apis_1.Category.addTeamMembers, 'show'),
    addTeamMembersSignup: evt(typed_apis_1.Category.addTeamMembers, 'signup'),
    requestTeamAccessShow: evt(typed_apis_1.Category.addTeamMembers, 'request'),
    requestTeamAccessSignup: evt(typed_apis_1.Category.addTeamMembers, 'request-signup'),
    uiTokenWarning: evt(typed_apis_1.Category.ui, 'token-warning'),
    uiLookerStudio: evt(typed_apis_1.Category.ui, 'looker-studio'),
    freeTrialClickUpgrade: evt(typed_apis_1.Category.freeTrial, 'click-upgrade'),
    connectionTemplateSelectPopular: evt(typed_apis_1.Category.connectionTemplate, 'select-popular'),
};
